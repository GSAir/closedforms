// # loop-acceleration/array_true-unreach-call3_true-termination.i
// # custom traverser
  t_void __VERIFIER_error()
  t_int __VERIFIER_nondet_int(t_void )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int main(t_void ){
    t_int A
    t_int i
    for ((op_assign i 0)
    ;(op_lessThan i 1024);(op_postFixIncr i)){
      (op_assign A[i] __VERIFIER_nondet_int())
    }
    for ((op_assign i 0)
    ;(op_notequals A[i] 0);(op_postFixIncr i)){
      if (op_greaterEqual i (op_minus 1024 1)) {
        break
      }
      else {}
    }
    __VERIFIER_assert((op_lessEqual i 1024))
  }
// # default pretty printer
  extern void __VERIFIER_error();
  extern int __VERIFIER_nondet_int(void);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int main(void)
  {
    int A[1024];
    int i;
    for(i = 0;i < 1024;i++){
      A[i] = __VERIFIER_nondet_int();
    }
    for(i = 0;A[i] != 0;i++){
      if(i >= 1024 - 1){
        break;
      }
    }
    __VERIFIER_assert(i <= 1024);
  }
