// # loop-acceleration/simple_false-unreach-call4.i
// # custom traverser
  t_void __VERIFIER_error()
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int main(t_void ){
    t_int x = 0x0ffffff1
    while (op_greaterThan x 1)
    {
      (op_minusAssign x 2)
    }
    __VERIFIER_assert((op_not (op_bracketedPrimary (op_modulo x 2))))
  }
// # default pretty printer
  extern void __VERIFIER_error();
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int main(void)
  {
    unsigned int x = 0x0ffffff1;
    while(x > 1){
      x -= 2;
    }
    __VERIFIER_assert(!(x % 2));
  }
