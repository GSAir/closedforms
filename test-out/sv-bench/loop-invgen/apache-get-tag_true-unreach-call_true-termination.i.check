// loop-invgen/apache-get-tag_true-unreach-call_true-termination.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
t_void __VERIFIER_assert(/* TODO: param list ... */) {
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
t_int main(/* TODO: param list ... */) {
  t_int tagbuf_len
  t_int t
  (op_assign tagbuf_len __VERIFIER_nondet_int((exp null)))
  if (op_greaterEqual tagbuf_len 1) {}
  else goto END
  (op_assign t 0)
  (op_prefixDecr tagbuf_len)
  while 1
  {
    if (op_equals t tagbuf_len) {
      __VERIFIER_assert((op_lessEqual 0 t))
      __VERIFIER_assert((op_lessEqual t tagbuf_len))
      goto END
    }
    else {}
    if __VERIFIER_nondet_int((exp null)) {
      break
    }
    else {}
    __VERIFIER_assert((op_lessEqual 0 t))
    __VERIFIER_assert((op_lessEqual t tagbuf_len))
    (op_postFixIncr t)
  }
  __VERIFIER_assert((op_lessEqual 0 t))
  __VERIFIER_assert((op_lessEqual t tagbuf_len))
  (op_postFixIncr t)
  while 1
  {
    if (op_equals t tagbuf_len) {
      __VERIFIER_assert((op_lessEqual 0 t))
      __VERIFIER_assert((op_lessEqual t tagbuf_len))
      goto END
    }
    else {}
    if __VERIFIER_nondet_int((exp null)) {
      if __VERIFIER_nondet_int((exp null)) {
        __VERIFIER_assert((op_lessEqual 0 t))
        __VERIFIER_assert((op_lessEqual t tagbuf_len))
        (op_postFixIncr t)
        if (op_equals t tagbuf_len) {
          __VERIFIER_assert((op_lessEqual 0 t))
          __VERIFIER_assert((op_lessEqual t tagbuf_len))
          goto END
        }
        else {}
      }
      else {}
    }
    else if __VERIFIER_nondet_int((exp null)) {
      break
    }
    else {}
    __VERIFIER_assert((op_lessEqual 0 t))
    __VERIFIER_assert((op_lessEqual t tagbuf_len))
    (op_postFixIncr t)
  }
  __VERIFIER_assert((op_lessEqual 0 t))
  __VERIFIER_assert((op_lessEqual t tagbuf_len))
  END:
  return 0
}
