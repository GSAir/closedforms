// # loop-invgen/id_build_true-unreach-call_true-termination.i
// # custom traverser
  t_void __VERIFIER_error(t_void )
  t_void __VERIFIER_assume(t_int )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_int main(){
    t_int offsetlengthnlen = __VERIFIER_nondet_int()
    t_int ij
    for ((op_assign i 0)
    ;(op_lessThan i nlen);(op_postFixIncr i)){
      for ((op_assign j 0)
      ;(op_lessThan j 8);(op_postFixIncr j)){
        __VERIFIER_assert((op_lessEqual 0 (op_minus (op_minus nlen 1) i)))
        __VERIFIER_assert((op_lessThan (op_minus (op_minus nlen 1) i) nlen))
      }
    }
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error(void);
  extern void __VERIFIER_assume(int);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  int main()
  {
    int offset, length, nlen = __VERIFIER_nondet_int();
    int i, j;
    for(i = 0;i < nlen;i++){
      for(j = 0;j < 8;j++){
        __VERIFIER_assert(0 <= nlen - 1 - i);
        __VERIFIER_assert(nlen - 1 - i < nlen);
      }
    }
    return 0;
  }
