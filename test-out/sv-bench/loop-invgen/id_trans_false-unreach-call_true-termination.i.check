// loop-invgen/id_trans_false-unreach-call_true-termination.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
t_void __VERIFIER_assert(/* TODO: param list ... */) {
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
t_int main(/* TODO: param list ... */) {
  t_int idBitLengthmaterial_lengthnlen
  t_int jk
  (op_assign nlen __VERIFIER_nondet_int((exp null)))
  (op_assign idBitLength __VERIFIER_nondet_int((exp null)))
  (op_assign material_length __VERIFIER_nondet_int((exp null)))
  if (op_not (op_bracketedPrimary (op_equals nlen (op_divide idBitLength 32)))) return 0
  else {}
  for ((op_assign j 0)
  ;(op_logicalAnd (op_bracketedPrimary (op_lessThan j (op_divide idBitLength 8))) (op_bracketedPrimary (op_lessThan j material_length)));(op_postFixIncr j)){
    __VERIFIER_assert((op_lessEqual 0 j))
    __VERIFIER_assert((op_lessThan j material_length))
    __VERIFIER_assert((op_lessEqual 0 (op_divide j 4)))
    __VERIFIER_assert((op_lessThan (op_divide j 4) nlen))
  }
  return 0
}
