// loop-invgen/sendmail-close-angle_true-unreach-call_true-termination.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
t_void __VERIFIER_assert(/* TODO: param list ... */) {
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
t_int main(/* TODO: param list ... */) {
  t_int in
  t_int inlen = __VERIFIER_nondet_int((exp null))
  t_int bufferlen = __VERIFIER_nondet_int((exp null))
  t_int buf
  t_int buflim
  if (op_greaterThan bufferlen 1) {}
  else goto END
  if (op_greaterThan inlen 0) {}
  else goto END
  if (op_lessThan bufferlen inlen) {}
  else goto END
  (op_assign buf 0)
  (op_assign in 0)
  (op_assign buflim (op_minus bufferlen 2))
  while __VERIFIER_nondet_int((exp null))
  {
    if (op_equals buf buflim) break
    else {}
    __VERIFIER_assert((op_lessEqual 0 buf))
    __VERIFIER_assert((op_lessThan buf bufferlen))
    (op_postFixIncr buf)
    out:
    (op_postFixIncr in)
    __VERIFIER_assert((op_lessEqual 0 in))
    __VERIFIER_assert((op_lessThan in inlen))
  }
  __VERIFIER_assert((op_lessEqual 0 buf))
  __VERIFIER_assert((op_lessThan buf bufferlen))
  (op_postFixIncr buf)
  __VERIFIER_assert((op_lessEqual 0 buf))
  __VERIFIER_assert((op_lessThan buf bufferlen))
  (op_postFixIncr buf)
  END:
  return 0
}
