// # loop-lit/afnp2014_true-unreach-call_true-termination.c.i
// # custom traverser
  t_void __VERIFIER_error(t_void )
  t_void __VERIFIER_assume(t_int )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_int main(){
    t_int x = 1
    t_int y = 0
    while (op_logicalAnd (op_lessThan y 1000) __VERIFIER_nondet_int())
    {
      (op_assign x (op_plus x y))
      (op_assign y (op_plus y 1))
    }
    __VERIFIER_assert((op_greaterEqual x y))
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error(void);
  extern void __VERIFIER_assume(int);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  int main()
  {
    int x = 1;
    int y = 0;
    while(y < 1000 && __VERIFIER_nondet_int()){
      x = x + y;
      y = y + 1;
    }
    __VERIFIER_assert(x >= y);
    return 0;
  }
