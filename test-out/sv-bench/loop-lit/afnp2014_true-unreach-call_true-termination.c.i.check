// loop-lit/afnp2014_true-unreach-call_true-termination.c.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
{
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
{
  t_int x = 1
  t_int y = 0
  while (op_logicalAnd (op_lessThan y 1000) __VERIFIER_nondet_int((exp null)))
  {
    (op_assign x (op_plus x y))
    (op_assign y (op_plus y 1))
  }
  __VERIFIER_assert((op_greaterEqual x y))
  return 0
}
