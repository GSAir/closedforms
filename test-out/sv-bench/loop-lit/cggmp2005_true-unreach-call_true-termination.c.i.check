// # loop-lit/cggmp2005_true-unreach-call_true-termination.c.i
// # custom traverser
  t_void __VERIFIER_error(t_void )
  t_void __VERIFIER_assume(t_int )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_int main(){
    t_int ij
    (op_assign i 1)
    (op_assign j 10)
    while (op_greaterEqual j i)
    {
      (op_assign i (op_plus i 2))
      (op_assign j (op_plus (op_minus 1) j))
    }
    __VERIFIER_assert((op_equals j 6))
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error(void);
  extern void __VERIFIER_assume(int);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  int main()
  {
    int i, j;
    i = 1;
    j = 10;
    while(j >= i){
      i = i + 2;
      j = -1 + j;
    }
    __VERIFIER_assert(j == 6);
    return 0;
  }
