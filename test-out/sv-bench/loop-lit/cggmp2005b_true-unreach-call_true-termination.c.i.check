// # loop-lit/cggmp2005b_true-unreach-call_true-termination.c.i
// # custom traverser
  t_void __VERIFIER_error(t_void )
  t_void __VERIFIER_assume(t_int )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_int main(){
    t_int ijk
    (op_assign i 0)
    (op_assign k 9)
    (op_assign j (op_minus 100))
    while (op_lessEqual i 100)
    {
      (op_assign i (op_plus i 1))
      while (op_lessThan j 20)
      {
        (op_assign j (op_plus i j))
      }
      (op_assign k 4)
      while (op_lessEqual k 3)
      {
        (op_assign k (op_plus k 1))
      }
    }
    __VERIFIER_assert((op_equals k 4))
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error(void);
  extern void __VERIFIER_assume(int);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  int main()
  {
    int i, j, k;
    i = 0;
    k = 9;
    j = -100;
    while(i <= 100){
      i = i + 1;
      while(j < 20){
        j = i + j;
      }
      k = 4;
      while(k <= 3){
        k = k + 1;
      }
    }
    __VERIFIER_assert(k == 4);
    return 0;
  }
