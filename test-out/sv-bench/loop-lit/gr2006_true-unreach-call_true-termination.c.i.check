// # loop-lit/gr2006_true-unreach-call_true-termination.c.i
// # custom traverser
  t_void __VERIFIER_error(t_void )
  t_void __VERIFIER_assume(t_int )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_int main(){
    t_int xy
    (op_assign x 0)
    (op_assign y 0)
    while 1
    {
      if (op_lessThan x 50) {
        (op_postFixIncr y)
      }
      else {
        (op_postFixDecr y)
      }
      if (op_lessThan y 0) break
      else {}
      (op_postFixIncr x)
    }
    __VERIFIER_assert((op_equals x 100))
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error(void);
  extern void __VERIFIER_assume(int);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  int main()
  {
    int x, y;
    x = 0;
    y = 0;
    while(1){
      if(x < 50){
        y++;
      }else{
        y--;
      }
      if(y < 0)
      break;
      x++;
    }
    __VERIFIER_assert(x == 100);
    return 0;
  }
