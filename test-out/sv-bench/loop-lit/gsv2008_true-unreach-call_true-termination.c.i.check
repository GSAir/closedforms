// # loop-lit/gsv2008_true-unreach-call_true-termination.c.i
// # custom traverser
  t_void __VERIFIER_error(t_void )
  t_void __VERIFIER_assume(t_int )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_int main(){
    t_int xy
    (op_assign x (op_minus 50))
    (op_assign y __VERIFIER_nondet_int())
    if (op_not (op_bracketedPrimary (op_logicalAnd (op_lessThan (op_minus 1000) y) (op_lessThan y 1000000)))) return 0
    else {}
    while (op_lessThan x 0)
    {
      (op_assign x (op_plus x y))
      (op_postFixIncr y)
    }
    __VERIFIER_assert((op_greaterThan y 0))
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error(void);
  extern void __VERIFIER_assume(int);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  int main()
  {
    int x, y;
    x = -50;
    y = __VERIFIER_nondet_int();
    if(!(-1000 < y && y < 1000000))
    return 0;
    while(x < 0){
      x = x + y;
      y++;
    }
    __VERIFIER_assert(y > 0);
    return 0;
  }
