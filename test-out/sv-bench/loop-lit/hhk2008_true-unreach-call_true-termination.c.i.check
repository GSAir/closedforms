// loop-lit/hhk2008_true-unreach-call_true-termination.c.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
t_void __VERIFIER_assert(/* TODO: param list ... */) {
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
t_int main(/* TODO: param list ... */) {
  t_int a = __VERIFIER_nondet_int((exp null))
  t_int b = __VERIFIER_nondet_int((exp null))
  t_int rescnt
  if (op_not (op_bracketedPrimary (op_lessEqual a 1000000))) return 0
  else {}
  if (op_not (op_bracketedPrimary (op_logicalAnd (op_lessEqual 0 b) (op_lessEqual b 1000000)))) return 0
  else {}
  (op_assign res a)
  (op_assign cnt b)
  while (op_greaterThan cnt 0)
  {
    (op_assign cnt (op_minus cnt 1))
    (op_assign res (op_plus res 1))
  }
  __VERIFIER_assert((op_equals res (op_plus a b)))
  return 0
}
