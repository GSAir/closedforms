// loop-lit/jm2006_variant_true-unreach-call_true-termination.c.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
t_void __VERIFIER_assert(/* TODO: param list ... */) {
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
t_int main(/* TODO: param list ... */) {
  t_int ij
  (op_assign i __VERIFIER_nondet_int((exp null)))
  (op_assign j __VERIFIER_nondet_int((exp null)))
  if (op_not (op_bracketedPrimary (op_logicalAnd (op_greaterEqual i 0) (op_lessEqual i 1000000)))) return 0
  else {}
  if (op_not (op_bracketedPrimary (op_greaterEqual j 0))) return 0
  else {}
  t_int x = i
  t_int y = j
  t_int z = 0
  while (op_notequals x 0)
  {
    (op_postFixDecr x)
    (op_minusAssign y 2)
    (op_postFixIncr z)
  }
  if (op_equals i j) {
    __VERIFIER_assert((op_equals y (op_minus z)))
  }
  else {}
  return 0
}
