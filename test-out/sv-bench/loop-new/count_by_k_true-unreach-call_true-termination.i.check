// # loop-new/count_by_k_true-unreach-call_true-termination.i
// # custom traverser
  t_void __VERIFIER_error(t_void )
  t_void __VERIFIER_assume(t_int )
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_int main(){
    t_int i
    t_int k
    (op_assign k __VERIFIER_nondet_int())
    if (op_not (op_bracketedPrimary (op_logicalAnd (op_lessEqual 0 k) (op_lessEqual k 10)))) return 0
    else {}
    for ((op_assign i 0)
    ;(op_lessThan i (op_multiply 1000000 k));(op_plusAssign i k)){}
    __VERIFIER_assert((op_equals i (op_multiply 1000000 k)))
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error(void);
  extern void __VERIFIER_assume(int);
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  int main()
  {
    int i;
    int k;
    k = __VERIFIER_nondet_int();
    if(!(0 <= k && k <= 10))
    return 0;
    for(i = 0;i < 1000000 * k;i += k);
    __VERIFIER_assert(i == 1000000 * k);
    return 0;
  }
