// loop-new/half_true-unreach-call_true-termination.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
t_void __VERIFIER_assert(/* TODO: param list ... */) {
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
t_int main(/* TODO: param list ... */) {
  t_int i = 0
  t_int n = 0
  t_int k = __VERIFIER_nondet_int((exp null))
  if (op_not (op_bracketedPrimary (op_logicalAnd (op_lessEqual k 1000000) (op_greaterEqual k (op_minus 1000000))))) return 0
  else {}
  for ((op_assign i 0)
  ;(op_lessThan i (op_multiply 2 k));(op_postFixIncr i)){
    if (op_equals (op_modulo i 2) 0) {
      (op_postFixIncr n)
    }
    else {}
  }
  __VERIFIER_assert((op_logicalOr (op_lessThan k 0) (op_equals n k)))
  return 0
}
