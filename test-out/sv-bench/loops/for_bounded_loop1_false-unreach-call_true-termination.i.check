// loops/for_bounded_loop1_false-unreach-call_true-termination.i
t_void __VERIFIER_error
t_void __VERIFIER_assume
t_void __VERIFIER_assert(/* TODO: param list ... */) {
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_int
t_int main(/* TODO: param list ... */) {
  t_int i = 0x = 0y = 0
  t_int n = __VERIFIER_nondet_int((exp null))
  if (op_not (op_bracketedPrimary (op_greaterThan n 0))) return 0
  else {}
  for ((op_assign i 0)
  ;(op_lessThan i n);(op_postFixIncr i)){
    (op_assign x (op_minus x y))
    __VERIFIER_assert((op_equals x 0))
    (op_assign y __VERIFIER_nondet_int((exp null)))
    if (op_not (op_bracketedPrimary (op_notequals y 0))) return 0
    else {}
    (op_assign x (op_plus x y))
    __VERIFIER_assert((op_notequals x 0))
  }
  __VERIFIER_assert((op_equals x 0))
}
