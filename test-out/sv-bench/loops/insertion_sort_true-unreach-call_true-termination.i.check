// loops/insertion_sort_true-unreach-call_true-termination.i
t_void __VERIFIER_error
{
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int __VERIFIER_nondet_uint
{
  t_int SIZE = __VERIFIER_nondet_uint((exp null))
  t_int ijkkey
  t_int v
  for ((op_assign j 1)
  ;(op_lessThan j SIZE);(op_postFixIncr j)){
    (op_assign key v[j])
    (op_assign i (op_minus j 1))
    while (op_logicalAnd (op_bracketedPrimary (op_greaterEqual i 0)) (op_bracketedPrimary (op_greaterThan v[i] key)))
    {
      (op_assign v[(op_plus i 1)] v[i])
      (op_assign i (op_minus i 1))
    }
    (op_assign v[(op_plus i 1)] key)
  }
  for ((op_assign k 1)
  ;(op_lessThan k SIZE);(op_postFixIncr k))__VERIFIER_assert((op_lessEqual v[(op_minus k 1)] v[k]))
  return 0
}
