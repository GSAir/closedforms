// loops/nec20_false-unreach-call_true-termination.i
t_void __VERIFIER_error
{
  if (op_not (op_bracketedPrimary cond)) {
    ERROR:
    __VERIFIER_error((exp null))
  }
  else {}
  return (exp null)
}
t_int b
t_bool __VERIFIER_nondet_bool
{
  t_bool k = __VERIFIER_nondet_bool((exp null))
  t_int inj
  t_int a
  if k {
    (op_assign n 0)
  }
  else {
    (op_assign n 1023)
  }
  (op_assign i 0)
  while (op_lessEqual i n)
  {
    (op_postFixIncr i)
    (op_assign j (op_plus j 2))
  }
  (op_assign a[i] 0)
  (op_assign a[j] 0)
  __VERIFIER_assert((op_lessThan j 1025))
  (op_assign a[b] 0)
  if (op_logicalAnd (op_greaterEqual b 0) (op_lessThan b 1023)) (op_assign a[b] 1)
  else (op_assign a[(op_modulo b 1023)] 1)
  return 1
}
