// # loops/sum04_true-unreach-call_true-termination.i
// # custom traverser
  t_void __VERIFIER_error()
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int main(){
    t_int isn = 0
    for ((op_assign i 1)
    ;(op_lessEqual i 8);(op_postFixIncr i)){
      (op_assign sn (op_plus sn (op_bracketedPrimary 2)))
    }
    __VERIFIER_assert((op_logicalOr (op_equals sn (op_multiply 8 (op_bracketedPrimary 2))) (op_equals sn 0)))
  }
// # default pretty printer
  extern void __VERIFIER_error();
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int main()
  {
    int i, sn = 0;
    for(i = 1;i <= 8;i++){
      sn = sn + (2);
    }
    __VERIFIER_assert(sn == 8 * (2) || sn == 0);
  }
