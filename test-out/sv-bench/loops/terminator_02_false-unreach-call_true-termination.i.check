// # loops/terminator_02_false-unreach-call_true-termination.i
// # custom traverser
  t_void __VERIFIER_error()
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int __VERIFIER_nondet_int()
  t_bool __VERIFIER_nondet_bool()
  t_int main(){
    t_int x = __VERIFIER_nondet_int()
    t_int y = __VERIFIER_nondet_int()
    t_int z = __VERIFIER_nondet_int()
    while (op_logicalAnd (op_lessThan x 100) (op_lessThan 100 z))
    {
      t_bool tmp = __VERIFIER_nondet_bool()
      if tmp {
        (op_postFixIncr x)
      }
      else {
        (op_postFixDecr x)
        (op_postFixDecr z)
      }
    }
    __VERIFIER_assert(0)
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error();
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int __VERIFIER_nondet_int();
  _Bool __VERIFIER_nondet_bool();
  int main()
  {
    int x = __VERIFIER_nondet_int();
    int y = __VERIFIER_nondet_int();
    int z = __VERIFIER_nondet_int();
    while(x < 100 && 100 < z){
      _Bool tmp = __VERIFIER_nondet_bool();
      if(tmp){
        x++;
      }else{
        x--;
        z--;
      }
    }
    __VERIFIER_assert(0);
    return 0;
  }
