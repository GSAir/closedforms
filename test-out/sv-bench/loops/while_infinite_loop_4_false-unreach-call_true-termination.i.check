// # loops/while_infinite_loop_4_false-unreach-call_true-termination.i
// # custom traverser
  t_void __VERIFIER_error()
  t_void __VERIFIER_assert(t_int cond){
    if (op_not (op_bracketedPrimary cond)) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return
  }
  t_int x = 0
  t_void eval(t_void ){
    while 1
    {
      (op_assign x 1)
      break
    }
    return
  }
  t_int main(){
    while 1
    {
      eval()
      __VERIFIER_assert((op_equals x 0))
    }
    __VERIFIER_assert((op_equals x 0))
    return 0
  }
// # default pretty printer
  extern void __VERIFIER_error();
  void __VERIFIER_assert(int cond)
  {
    if(!(cond)){
      ERROR:
      __VERIFIER_error();
    }
    return;
  }
  int x = 0;
  void eval(void)
  {
    while(1){
      x = 1;
      break;
    }
    return;
  }
  int main()
  {
    while(1){
      eval();
      __VERIFIER_assert(x == 0);
    }
    __VERIFIER_assert(x == 0);
    return 0;
  }
