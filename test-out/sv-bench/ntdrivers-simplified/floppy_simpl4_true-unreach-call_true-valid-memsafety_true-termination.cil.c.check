// ntdrivers-simplified/floppy_simpl4_true-unreach-call_true-valid-memsafety_true-termination.cil.c
t_void __VERIFIER_error
t_char __VERIFIER_nondet_char
t_int __VERIFIER_nondet_int
t_unspecified __VERIFIER_nondet_long
t_void __VERIFIER_nondet_pointer
t_int FlAcpiConfigureFloppy
t_int FlQueueIrpToThread
t_int FloppyPnp
t_int FloppyStartDevice
t_int FloppyPnpComplete
t_int FlFdcDeviceIo
t_int IoBuildDeviceIoControlRequest
t_int IoDeleteSymbolicLink
t_int IoQueryDeviceDescription
t_int IoRegisterDeviceInterface
t_int IoSetDeviceInterfaceState
t_int IofCallDriver
t_int KeSetEvent
t_int KeWaitForSingleObject
t_int ObReferenceObjectByHandle
t_int PsCreateSystemThread
t_int ZwClose
t_int FloppyCreateClose
t_int FloppyQueueRequest
t_int FloppyDeviceControl
t_int FlCheckFormatParameters
t_int FloppyQueueRequest
t_void errorFn
t_void IofCompleteRequest
t_int __VERIFIER_nondet_int
t_int FloppyThread
t_int KernelMode
t_int Suspended
t_int Executive
t_int DiskController
t_int FloppyDiskPeripheral
t_int FlConfigCallBack
t_int MaximumInterfaceType
t_int MOUNTDEV_MOUNTED_DEVICE_GUID
t_int myStatus
t_int s
t_int UNLOADED
t_int NP
t_int DC
t_int SKIP1
t_int SKIP2
t_int MPR1
t_int MPR3
t_int IPC
t_int pended
t_int compRegistered
t_int lowerDriverReturn
t_int setEventCalled
t_int customIrp
t_void _BLAST_init(/* TODO: param list ... */) {
  {
    (op_assign UNLOADED 0)
    (op_assign NP 1)
    (op_assign DC 2)
    (op_assign SKIP1 3)
    (op_assign SKIP2 4)
    (op_assign MPR1 5)
    (op_assign MPR3 6)
    (op_assign IPC 7)
    (op_assign s UNLOADED)
    (op_assign pended 0)
    (op_assign compRegistered 0)
    (op_assign lowerDriverReturn 0)
    (op_assign setEventCalled 0)
    (op_assign customIrp 0)
    return (exp null)
  }
}
t_int PagingReferenceCount = 0
t_int PagingMutex = 0
t_int FlAcpiConfigureFloppy(/* TODO: param list ... */) {
  {
    return (op_bracketedPrimary 0)
  }
}
t_int FlQueueIrpToThread(/* TODO: param list ... */) {
  t_int status
  t_int threadHandle = __VERIFIER_nondet_int((exp null))
  t_int DisketteExtension__PoweringDown = __VERIFIER_nondet_int((exp null))
  t_int DisketteExtension__ThreadReferenceCount = __VERIFIER_nondet_int((exp null))
  t_int DisketteExtension__FloppyThread = __VERIFIER_nondet_int((exp null))
  t_int Irp__IoStatus__Status
  t_int Irp__IoStatus__Information
  t_int Irp__Tail__Overlay__CurrentStackLocation__Control
  t_int ObjAttributes = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp12
  t_int __cil_tmp13
  {
    if (op_equals DisketteExtension__PoweringDown 1) {
      (op_assign myStatus (op_minus 1073741101))
      (op_assign Irp__IoStatus__Status (op_minus 1073741101))
      (op_assign Irp__IoStatus__Information 0)
      return (op_bracketedPrimary (op_minus 1073741101))
    }
    else {}
    (op_postFixIncr DisketteExtension__ThreadReferenceCount)
    if (op_equals DisketteExtension__ThreadReferenceCount 0) {
      (op_postFixIncr DisketteExtension__ThreadReferenceCount)
      (op_postFixIncr PagingReferenceCount)
      if (op_equals PagingReferenceCount 1) {
      }
      else {}
      {
        (op_assign status PsCreateSystemThread((threadHandle,0,ObjAttributes,0,0,FloppyThread,DisketteExtension)))
      }
      {
        if (op_lessThan status 0) {
          (op_assign DisketteExtension__ThreadReferenceCount (op_minus 1))
          (op_postFixDecr PagingReferenceCount)
          if (op_equals PagingReferenceCount 0) {
          }
          else {}
          return (op_bracketedPrimary status)
        }
        else {}
      }
      {
        (op_assign status ObReferenceObjectByHandle((threadHandle,1048576,0,KernelMode,DisketteExtension__FloppyThread,0)))
        ZwClose(threadHandle)
      }
      {
        if (op_lessThan status 0) {
          return (op_bracketedPrimary status)
        }
        else {}
      }
    }
    else {}
    if (op_equals pended 0) {
      (op_assign pended 1)
    }
    else {
      {
        errorFn((exp null))
      }
    }
    return (op_bracketedPrimary 259)
  }
}
t_int FloppyPnp(/* TODO: param list ... */) {
  t_int DeviceObject__DeviceExtension = __VERIFIER_nondet_int((exp null))
  t_int Irp__Tail__Overlay__CurrentStackLocation = __VERIFIER_nondet_int((exp null))
  t_int Irp__IoStatus__Information
  t_int Irp__IoStatus__Status
  t_int Irp__CurrentLocation = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__IsRemoved = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__IsStarted = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__TargetObject = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__HoldNewRequests
  t_int disketteExtension__FloppyThread = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__InterfaceString__Buffer = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__InterfaceString = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__ArcName__Length = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__ArcName = __VERIFIER_nondet_int((exp null))
  t_int irpSp__MinorFunction = __VERIFIER_nondet_int((exp null))
  t_int IoGetConfigurationInformation__FloppyCount = __VERIFIER_nondet_int((exp null))
  t_int irpSp
  t_int disketteExtension
  t_int ntStatus
  t_int doneEvent = __VERIFIER_nondet_int((exp null))
  t_int irpSp___0
  t_int nextIrpSp
  t_int nextIrpSp__Control
  t_int irpSp___1
  t_int irpSp__Context
  t_int irpSp__Control
  t_unspecified __cil_tmp29
  t_unspecified __cil_tmp30
  {
    (op_assign ntStatus 0)
    (op_postFixIncr PagingReferenceCount)
    if (op_equals PagingReferenceCount 1) {
    }
    else {}
    (op_assign disketteExtension DeviceObject__DeviceExtension)
    (op_assign irpSp Irp__Tail__Overlay__CurrentStackLocation)
    if disketteExtension__IsRemoved {
      {
        (op_assign Irp__IoStatus__Information 0)
        (op_assign Irp__IoStatus__Status (op_minus 1073741738))
        (op_assign myStatus (op_minus 1073741738))
        IofCompleteRequest((Irp,0))
      }
      return (op_bracketedPrimary (op_minus 1073741738))
    }
    else {}
    if (op_equals irpSp__MinorFunction 0) {
      goto switch_0_0
    }
    else {
      if (op_equals irpSp__MinorFunction 5) {
        goto switch_0_5
      }
      else {
        if (op_equals irpSp__MinorFunction 1) {
          goto switch_0_5
        }
        else {
          if (op_equals irpSp__MinorFunction 6) {
            goto switch_0_6
          }
          else {
            if (op_equals irpSp__MinorFunction 3) {
              goto switch_0_6
            }
            else {
              if (op_equals irpSp__MinorFunction 4) {
                goto switch_0_4
              }
              else {
                if (op_equals irpSp__MinorFunction 2) {
                  goto switch_0_2
                }
                else {
                  goto switch_0_default
                  if 0 {
                    switch_0_0:
                    {
                      (op_assign ntStatus FloppyStartDevice((DeviceObject,Irp)))
                    }
                    goto switch_0_break
                    switch_0_5:
                    if (op_equals irpSp__MinorFunction 5) {
                    }
                    else {}
                    if (op_not disketteExtension__IsStarted) {
                      if (op_equals s NP) {
                        (op_assign s SKIP1)
                      }
                      else {
                        {
                          errorFn((exp null))
                        }
                      }
                      {
                        (op_postFixIncr Irp__CurrentLocation)
                        (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
                        (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                      }
                      return (op_bracketedPrimary ntStatus)
                    }
                    else {}
                    {
                      (op_assign disketteExtension__HoldNewRequests 1)
                      (op_assign ntStatus FlQueueIrpToThread((Irp,disketteExtension)))
                    }
                    {
                      (op_assign __cil_tmp29 (t_unspecified)ntStatus)
                      if (op_equals __cil_tmp29 259L) {
                        {
                          KeWaitForSingleObject((disketteExtension__FloppyThread,Executive,KernelMode,0,0))
                        }
                        if (op_notequals disketteExtension__FloppyThread 0) {
                        }
                        else {}
                        (op_assign disketteExtension__FloppyThread 0)
                        (op_assign Irp__IoStatus__Status 0)
                        (op_assign myStatus 0)
                        if (op_equals s NP) {
                          (op_assign s SKIP1)
                        }
                        else {
                          {
                            errorFn((exp null))
                          }
                        }
                        {
                          (op_postFixIncr Irp__CurrentLocation)
                          (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
                          (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                        }
                      }
                      else {
                        {
                          (op_assign ntStatus (op_minus 1073741823))
                          (op_assign Irp__IoStatus__Status ntStatus)
                          (op_assign myStatus ntStatus)
                          (op_assign Irp__IoStatus__Information 0)
                          IofCompleteRequest((Irp,0))
                        }
                      }
                    }
                    goto switch_0_break
                    switch_0_6:
                    if (op_equals irpSp__MinorFunction 6) {
                    }
                    else {}
                    if (op_not disketteExtension__IsStarted) {
                      (op_assign Irp__IoStatus__Status 0)
                      (op_assign myStatus 0)
                      if (op_equals s NP) {
                        (op_assign s SKIP1)
                      }
                      else {
                        {
                          errorFn((exp null))
                        }
                      }
                      {
                        (op_postFixIncr Irp__CurrentLocation)
                        (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
                        (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                      }
                    }
                    else {
                      (op_assign Irp__IoStatus__Status 0)
                      (op_assign myStatus 0)
                      (op_assign irpSp___0 Irp__Tail__Overlay__CurrentStackLocation)
                      (op_assign nextIrpSp (op_minus Irp__Tail__Overlay__CurrentStackLocation 1))
                      (op_assign nextIrpSp__Control 0)
                      if (op_notequals s NP) {
                        {
                          errorFn((exp null))
                        }
                      }
                      else {
                        if (op_notequals compRegistered 0) {
                          {
                            errorFn((exp null))
                          }
                        }
                        else {
                          (op_assign compRegistered 1)
                        }
                      }
                      {
                        (op_assign irpSp___1 (op_minus Irp__Tail__Overlay__CurrentStackLocation 1))
                        (op_assign irpSp__Context doneEvent)
                        (op_assign irpSp__Control 224)
                        (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                      }
                      {
                        (op_assign __cil_tmp30 (t_unspecified)ntStatus)
                        if (op_equals __cil_tmp30 259L) {
                          {
                            KeWaitForSingleObject((doneEvent,Executive,KernelMode,0,0))
                            (op_assign ntStatus myStatus)
                          }
                        }
                        else {}
                      }
                      {
                        (op_assign disketteExtension__HoldNewRequests 0)
                        (op_assign Irp__IoStatus__Status ntStatus)
                        (op_assign myStatus ntStatus)
                        (op_assign Irp__IoStatus__Information 0)
                        IofCompleteRequest((Irp,0))
                      }
                    }
                    goto switch_0_break
                    switch_0_4:
                    (op_assign disketteExtension__IsStarted 0)
                    (op_assign Irp__IoStatus__Status 0)
                    (op_assign myStatus 0)
                    if (op_equals s NP) {
                      (op_assign s SKIP1)
                    }
                    else {
                      {
                        errorFn((exp null))
                      }
                    }
                    {
                      (op_postFixIncr Irp__CurrentLocation)
                      (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
                      (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                    }
                    goto switch_0_break
                    switch_0_2:
                    (op_assign disketteExtension__HoldNewRequests 0)
                    (op_assign disketteExtension__IsStarted 0)
                    (op_assign disketteExtension__IsRemoved 1)
                    if (op_equals s NP) {
                      (op_assign s SKIP1)
                    }
                    else {
                      {
                        errorFn((exp null))
                      }
                    }
                    {
                      (op_postFixIncr Irp__CurrentLocation)
                      (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
                      (op_assign Irp__IoStatus__Status 0)
                      (op_assign myStatus 0)
                      (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                    }
                    if (op_notequals disketteExtension__InterfaceString__Buffer 0) {
                      {
                        IoSetDeviceInterfaceState((disketteExtension__InterfaceString,0))
                      }
                    }
                    else {}
                    if (op_notequals disketteExtension__ArcName__Length 0) {
                      {
                        IoDeleteSymbolicLink(disketteExtension__ArcName)
                      }
                    }
                    else {}
                    (op_postFixDecr IoGetConfigurationInformation__FloppyCount)
                    goto switch_0_break
                    switch_0_default:
                    {}
                    if (op_equals s NP) {
                      (op_assign s SKIP1)
                    }
                    else {
                      {
                        errorFn((exp null))
                      }
                    }
                    {
                      (op_postFixIncr Irp__CurrentLocation)
                      (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
                      (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                    }
                  }
                  else {
                    switch_0_break:
                    {}
                  }
                }
              }
            }
          }
        }
      }
    }
    (op_postFixDecr PagingReferenceCount)
    if (op_equals PagingReferenceCount 0) {
    }
    else {}
    return (op_bracketedPrimary ntStatus)
  }
}
t_int FloppyStartDevice(/* TODO: param list ... */) {
  t_int DeviceObject__DeviceExtension = __VERIFIER_nondet_int((exp null))
  t_int Irp__Tail__Overlay__CurrentStackLocation = __VERIFIER_nondet_int((exp null))
  t_int Irp__IoStatus__Status
  t_int disketteExtension__TargetObject = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__MaxTransferSize
  t_int disketteExtension__DriveType = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__PerpendicularMode
  t_int disketteExtension__DeviceUnit
  t_int disketteExtension__DriveOnValue
  t_int disketteExtension__UnderlyingPDO = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__InterfaceString = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__IsStarted
  t_int disketteExtension__HoldNewRequests
  t_int ntStatus
  t_int pnpStatus
  t_int doneEvent = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo__BufferCount
  t_int fdcInfo__BufferSize
  t_int fdcInfo__MaxTransferSize = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo__AcpiBios = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo__AcpiFdiSupported = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo__PeripheralNumber = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo__BusType
  t_int fdcInfo__ControllerNumber = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo__UnitNumber = __VERIFIER_nondet_int((exp null))
  t_int fdcInfo__BusNumber = __VERIFIER_nondet_int((exp null))
  t_int Dc
  t_int Fp
  t_int disketteExtension
  t_int irpSp
  t_int irpSp___0
  t_int nextIrpSp
  t_int nextIrpSp__Control
  t_int irpSp___1
  t_int irpSp__Control
  t_int irpSp__Context
  t_int InterfaceType
  t_int KUSER_SHARED_DATA__AlternativeArchitecture_NEC98x86 = __VERIFIER_nondet_int((exp null))
  t_unspecified __cil_tmp42
  t_int __cil_tmp43
  t_int __cil_tmp44
  t_int __cil_tmp45
  t_int __cil_tmp46 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp47
  t_int __cil_tmp48
  t_int __cil_tmp49
  {
    (op_assign Dc DiskController)
    (op_assign Fp FloppyDiskPeripheral)
    (op_assign disketteExtension DeviceObject__DeviceExtension)
    (op_assign irpSp Irp__Tail__Overlay__CurrentStackLocation)
    (op_assign irpSp___0 Irp__Tail__Overlay__CurrentStackLocation)
    (op_assign nextIrpSp (op_minus Irp__Tail__Overlay__CurrentStackLocation 1))
    (op_assign nextIrpSp__Control 0)
    if (op_notequals s NP) {
      {
        errorFn((exp null))
      }
    }
    else {
      if (op_notequals compRegistered 0) {
        {
          errorFn((exp null))
        }
      }
      else {
        (op_assign compRegistered 1)
      }
    }
    {
      (op_assign irpSp___1 (op_minus Irp__Tail__Overlay__CurrentStackLocation 1))
      (op_assign irpSp__Context doneEvent)
      (op_assign irpSp__Control 224)
      (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
    }
    {
      (op_assign __cil_tmp42 (t_unspecified)ntStatus)
      if (op_equals __cil_tmp42 259L) {
        {
          (op_assign ntStatus KeWaitForSingleObject((doneEvent,Executive,KernelMode,0,0)))
          (op_assign ntStatus myStatus)
        }
      }
      else {}
    }
    {
      (op_assign fdcInfo__BufferCount 0)
      (op_assign fdcInfo__BufferSize 0)
      (op_assign ntStatus FlFdcDeviceIo((disketteExtension__TargetObject,__cil_tmp46,fdcInfo)))
    }
    if (op_greaterEqual ntStatus 0) {
      (op_assign disketteExtension__MaxTransferSize fdcInfo__MaxTransferSize)
      if fdcInfo__AcpiBios {
        if fdcInfo__AcpiFdiSupported {
          {
            (op_assign ntStatus FlAcpiConfigureFloppy((disketteExtension,fdcInfo)))
          }
          if (op_equals disketteExtension__DriveType 4) {
          }
          else {}
        }
        else {
          goto _L
        }
      }
      else {
        _L:
        if (op_equals disketteExtension__DriveType 4) {
        }
        else {}
        (op_assign InterfaceType 0)
        {
          while 1
          {
            while_0_continue:
            {}
            if (op_greaterEqual InterfaceType MaximumInterfaceType) {
              goto while_1_break
            }
            else {}
            {
              (op_assign fdcInfo__BusType InterfaceType)
              (op_assign ntStatus IoQueryDeviceDescription((fdcInfo__BusType,fdcInfo__BusNumber,Dc,fdcInfo__ControllerNumber,Fp,fdcInfo__PeripheralNumber,FlConfigCallBack,disketteExtension)))
            }
            if (op_greaterEqual ntStatus 0) {
              goto while_1_break
            }
            else {}
            (op_postFixIncr InterfaceType)
          }
          while_0_break:
          {}
        }
        while_1_break:
        {}
      }
      if (op_greaterEqual ntStatus 0) {
        if (op_notequals KUSER_SHARED_DATA__AlternativeArchitecture_NEC98x86 0) {
          (op_assign disketteExtension__DeviceUnit fdcInfo__UnitNumber)
          (op_assign disketteExtension__DriveOnValue fdcInfo__UnitNumber)
        }
        else {
          (op_assign disketteExtension__DeviceUnit fdcInfo__PeripheralNumber)
        }
        {
          (op_assign pnpStatus IoRegisterDeviceInterface((disketteExtension__UnderlyingPDO,MOUNTDEV_MOUNTED_DEVICE_GUID,0,disketteExtension__InterfaceString)))
        }
        if (op_greaterEqual pnpStatus 0) {
          {
            (op_assign pnpStatus IoSetDeviceInterfaceState((disketteExtension__InterfaceString,1)))
          }
        }
        else {}
        (op_assign disketteExtension__IsStarted 1)
        (op_assign disketteExtension__HoldNewRequests 0)
      }
      else {}
    }
    else {}
    {
      (op_assign Irp__IoStatus__Status ntStatus)
      (op_assign myStatus ntStatus)
      IofCompleteRequest((Irp,0))
    }
    return (op_bracketedPrimary ntStatus)
  }
}
t_int FloppyPnpComplete(/* TODO: param list ... */) {
  {
    {
      KeSetEvent((Context,1,0))
    }
    return (op_bracketedPrimary (op_minus 1073741802))
  }
}
t_int FlFdcDeviceIo(/* TODO: param list ... */) {
  t_int ntStatus
  t_int irp
  t_int irpStack
  t_int doneEvent = __VERIFIER_nondet_int((exp null))
  t_int ioStatus = __VERIFIER_nondet_int((exp null))
  t_int irp__Tail__Overlay__CurrentStackLocation = __VERIFIER_nondet_int((exp null))
  t_int irpStack__Parameters__DeviceIoControl__Type3InputBuffer
  t_unspecified __cil_tmp11
  {
    {
      (op_assign irp IoBuildDeviceIoControlRequest((Ioctl,DeviceObject,0,0,0,0,1,doneEvent,ioStatus)))
    }
    if (op_equals irp 0) {
      return (op_bracketedPrimary (op_minus 1073741670))
    }
    else {}
    {
      (op_assign irpStack (op_minus irp__Tail__Overlay__CurrentStackLocation 1))
      (op_assign irpStack__Parameters__DeviceIoControl__Type3InputBuffer Data)
      (op_assign ntStatus IofCallDriver((DeviceObject,irp)))
    }
    {
      (op_assign __cil_tmp11 (t_unspecified)ntStatus)
      if (op_equals __cil_tmp11 259L) {
        {
          KeWaitForSingleObject((doneEvent,Suspended,KernelMode,0,0))
          (op_assign ntStatus myStatus)
        }
      }
      else {}
    }
    return (op_bracketedPrimary ntStatus)
  }
}
t_void FloppyProcessQueuedRequests(/* TODO: param list ... */) {
  {
    return (exp null)
  }
}
t_void stub_driver_init(/* TODO: param list ... */) {
  {
    (op_assign s NP)
    (op_assign pended 0)
    (op_assign compRegistered 0)
    (op_assign lowerDriverReturn 0)
    (op_assign setEventCalled 0)
    (op_assign customIrp 0)
    return (exp null)
  }
}
t_int main(/* TODO: param list ... */) {
  t_int status
  t_int irp = __VERIFIER_nondet_int((exp null))
  t_int pirp
  t_int pirp__IoStatus__Status
  t_int irp_choice = __VERIFIER_nondet_int((exp null))
  t_int devobj = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp8
  (op_assign FloppyThread 0)
  (op_assign KernelMode 0)
  (op_assign Suspended 0)
  (op_assign Executive 0)
  (op_assign DiskController 0)
  (op_assign FloppyDiskPeripheral 0)
  (op_assign FlConfigCallBack 0)
  (op_assign MaximumInterfaceType 0)
  (op_assign MOUNTDEV_MOUNTED_DEVICE_GUID 0)
  (op_assign myStatus 0)
  (op_assign s 0)
  (op_assign UNLOADED 0)
  (op_assign NP 0)
  (op_assign DC 0)
  (op_assign SKIP1 0)
  (op_assign SKIP2 0)
  (op_assign MPR1 0)
  (op_assign MPR3 0)
  (op_assign IPC 0)
  (op_assign pended 0)
  (op_assign compRegistered 0)
  (op_assign lowerDriverReturn 0)
  (op_assign setEventCalled 0)
  (op_assign customIrp 0)
  {
    {
      (op_assign status 0)
      (op_assign pirp irp)
      _BLAST_init((exp null))
    }
    if (op_greaterEqual status 0) {
      (op_assign s NP)
      (op_assign customIrp 0)
      (op_assign setEventCalled customIrp)
      (op_assign lowerDriverReturn setEventCalled)
      (op_assign compRegistered lowerDriverReturn)
      (op_assign pended compRegistered)
      (op_assign pirp__IoStatus__Status 0)
      (op_assign myStatus 0)
      if (op_equals irp_choice 0) {
        (op_assign pirp__IoStatus__Status (op_minus 1073741637))
        (op_assign myStatus (op_minus 1073741637))
      }
      else {}
      {
        stub_driver_init((exp null))
      }
      {
        if (op_lessThan status 0) {
          return (op_bracketedPrimary (op_minus 1))
        }
        else {}
      }
      t_int tmp_ndt_1
      (op_assign tmp_ndt_1 __VERIFIER_nondet_int((exp null)))
      if (op_equals tmp_ndt_1 0) {
        goto switch_2_0
      }
      else {
        t_int tmp_ndt_2
        (op_assign tmp_ndt_2 __VERIFIER_nondet_int((exp null)))
        if (op_equals tmp_ndt_2 1) {
          goto switch_2_1
        }
        else {
          t_int tmp_ndt_3
          (op_assign tmp_ndt_3 __VERIFIER_nondet_int((exp null)))
          if (op_equals tmp_ndt_3 2) {
            goto switch_2_2
          }
          else {
            t_int tmp_ndt_4
            (op_assign tmp_ndt_4 __VERIFIER_nondet_int((exp null)))
            if (op_equals tmp_ndt_4 3) {
              goto switch_2_3
            }
            else {
              goto switch_2_default
              if 0 {
                switch_2_0:
                {
                  (op_assign status FloppyCreateClose((devobj,pirp)))
                }
                goto switch_2_break
                switch_2_1:
                {
                  (op_assign status FloppyCreateClose((devobj,pirp)))
                }
                goto switch_2_break
                switch_2_2:
                {
                  (op_assign status FloppyDeviceControl((devobj,pirp)))
                }
                goto switch_2_break
                switch_2_3:
                {
                  (op_assign status FloppyPnp((devobj,pirp)))
                }
                goto switch_2_break
                switch_2_default:
                {}
                return (op_bracketedPrimary (op_minus 1))
              }
              else {
                switch_2_break:
                {}
              }
            }
          }
        }
      }
    }
    else {}
    if (op_equals pended 1) {
      if (op_equals s NP) {
        (op_assign s NP)
      }
      else {
        goto _L___2
      }
    }
    else {
      _L___2:
      if (op_equals pended 1) {
        if (op_equals s MPR3) {
          (op_assign s MPR3)
        }
        else {
          goto _L___1
        }
      }
      else {
        _L___1:
        if (op_notequals s UNLOADED) {
          if (op_notequals status (op_minus 1)) {
            if (op_notequals s SKIP2) {
              if (op_notequals s IPC) {
                if (op_notequals s DC) {
                  {
                    errorFn((exp null))
                  }
                }
                else {
                  goto _L___0
                }
              }
              else {
                goto _L___0
              }
            }
            else {
              _L___0:
              if (op_equals pended 1) {
                if (op_notequals status 259) {
                  (op_assign status 0)
                }
                else {}
              }
              else {
                if (op_equals s DC) {
                  if (op_equals status 259) {
                    {
                      errorFn((exp null))
                    }
                  }
                  else {}
                }
                else {
                  if (op_notequals status lowerDriverReturn) {
                    {
                      errorFn((exp null))
                    }
                  }
                  else {}
                }
              }
            }
          }
          else {}
        }
        else {}
      }
    }
    (op_assign status 0)
    return (op_bracketedPrimary status)
  }
}
t_int IoBuildDeviceIoControlRequest(/* TODO: param list ... */) {
  t_int malloc = __VERIFIER_nondet_int((exp null))
  {
    (op_assign customIrp 1)
    t_int tmp_ndt_5
    (op_assign tmp_ndt_5 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_5 0) {
      goto switch_3_0
    }
    else {
      goto switch_3_default
      if 0 {
        switch_3_0:
        return (op_bracketedPrimary malloc)
        switch_3_default:
        {}
        return (op_bracketedPrimary 0)
      }
      else {
      }
    }
  }
}
t_int IoDeleteSymbolicLink(/* TODO: param list ... */) {
  {
    t_int tmp_ndt_6
    (op_assign tmp_ndt_6 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_6 0) {
      goto switch_4_0
    }
    else {
      goto switch_4_default
      if 0 {
        switch_4_0:
        return (op_bracketedPrimary 0)
        switch_4_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741823))
      }
      else {
      }
    }
  }
}
t_int IoQueryDeviceDescription(/* TODO: param list ... */) {
  {
    t_int tmp_ndt_7
    (op_assign tmp_ndt_7 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_7 0) {
      goto switch_5_0
    }
    else {
      goto switch_5_default
      if 0 {
        switch_5_0:
        return (op_bracketedPrimary 0)
        switch_5_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741823))
      }
      else {
      }
    }
  }
}
t_int IoRegisterDeviceInterface(/* TODO: param list ... */) {
  {
    t_int tmp_ndt_8
    (op_assign tmp_ndt_8 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_8 0) {
      goto switch_6_0
    }
    else {
      goto switch_6_default
      if 0 {
        switch_6_0:
        return (op_bracketedPrimary 0)
        switch_6_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741808))
      }
      else {
      }
    }
  }
}
t_int IoSetDeviceInterfaceState(/* TODO: param list ... */) {
  {
    t_int tmp_ndt_9
    (op_assign tmp_ndt_9 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_9 0) {
      goto switch_7_0
    }
    else {
      goto switch_7_default
      if 0 {
        switch_7_0:
        return (op_bracketedPrimary 0)
        switch_7_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741823))
      }
      else {
      }
    }
  }
}
t_void stubMoreProcessingRequired(/* TODO: param list ... */) {
  {
    if (op_equals s NP) {
      (op_assign s MPR1)
    }
    else {
      {
        errorFn((exp null))
      }
    }
    return (exp null)
  }
}
t_int IofCallDriver(/* TODO: param list ... */) {
  t_int returnVal2
  t_int compRetStatus1
  t_int lcontext = __VERIFIER_nondet_int((exp null))
  t_unspecified __cil_tmp7
  {
    if compRegistered {
      {
        (op_assign compRetStatus1 FloppyPnpComplete((DeviceObject,Irp,lcontext)))
      }
      {
        (op_assign __cil_tmp7 (t_unspecified)compRetStatus1)
        if (op_equals __cil_tmp7 (op_minus 1073741802)) {
          {
            stubMoreProcessingRequired((exp null))
          }
        }
        else {}
      }
    }
    else {}
    t_int tmp_ndt_10
    (op_assign tmp_ndt_10 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_10 0) {
      goto switch_8_0
    }
    else {
      t_int tmp_ndt_11
      (op_assign tmp_ndt_11 __VERIFIER_nondet_int((exp null)))
      if (op_equals tmp_ndt_11 1) {
        goto switch_8_1
      }
      else {
        goto switch_8_default
        if 0 {
          switch_8_0:
          (op_assign returnVal2 0)
          goto switch_8_break
          switch_8_1:
          (op_assign returnVal2 (op_minus 1073741823))
          goto switch_8_break
          switch_8_default:
          (op_assign returnVal2 259)
          goto switch_8_break
        }
        else {
          switch_8_break:
          {}
        }
      }
    }
    if (op_equals s NP) {
      (op_assign s IPC)
      (op_assign lowerDriverReturn returnVal2)
    }
    else {
      if (op_equals s MPR1) {
        if (op_equals returnVal2 259) {
          (op_assign s MPR3)
          (op_assign lowerDriverReturn returnVal2)
        }
        else {
          (op_assign s NP)
          (op_assign lowerDriverReturn returnVal2)
        }
      }
      else {
        if (op_equals s SKIP1) {
          (op_assign s SKIP2)
          (op_assign lowerDriverReturn returnVal2)
        }
        else {
          {
            errorFn((exp null))
          }
        }
      }
    }
    return (op_bracketedPrimary returnVal2)
  }
}
t_void IofCompleteRequest(/* TODO: param list ... */) {
  {
    if (op_equals s NP) {
      (op_assign s DC)
    }
    else {
      {
        errorFn((exp null))
      }
    }
    return (exp null)
  }
}
t_int KeSetEvent(/* TODO: param list ... */) {
  t_int l = __VERIFIER_nondet_int((exp null))
  {
    (op_assign setEventCalled 1)
    return (op_bracketedPrimary l)
  }
}
t_int KeWaitForSingleObject(/* TODO: param list ... */) {
  {
    if (op_equals s MPR3) {
      if (op_equals setEventCalled 1) {
        (op_assign s NP)
        (op_assign setEventCalled 0)
      }
      else {
        goto _L
      }
    }
    else {
      _L:
      if (op_equals customIrp 1) {
        (op_assign s NP)
        (op_assign customIrp 0)
      }
      else {
        if (op_equals s MPR3) {
          {
            errorFn((exp null))
          }
        }
        else {}
      }
    }
    t_int tmp_ndt_12
    (op_assign tmp_ndt_12 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_12 0) {
      goto switch_9_0
    }
    else {
      goto switch_9_default
      if 0 {
        switch_9_0:
        return (op_bracketedPrimary 0)
        switch_9_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741823))
      }
      else {
      }
    }
  }
}
t_int ObReferenceObjectByHandle(/* TODO: param list ... */) {
  {
    t_int tmp_ndt_13
    (op_assign tmp_ndt_13 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_13 0) {
      goto switch_10_0
    }
    else {
      goto switch_10_default
      if 0 {
        switch_10_0:
        return (op_bracketedPrimary 0)
        switch_10_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741823))
      }
      else {
      }
    }
  }
}
t_int PsCreateSystemThread(/* TODO: param list ... */) {
  {
    t_int tmp_ndt_14
    (op_assign tmp_ndt_14 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_14 0) {
      goto switch_11_0
    }
    else {
      goto switch_11_default
      if 0 {
        switch_11_0:
        return (op_bracketedPrimary 0)
        switch_11_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741823))
      }
      else {
      }
    }
  }
}
t_int ZwClose(/* TODO: param list ... */) {
  {
    t_int tmp_ndt_15
    (op_assign tmp_ndt_15 __VERIFIER_nondet_int((exp null)))
    if (op_equals tmp_ndt_15 0) {
      goto switch_12_0
    }
    else {
      goto switch_12_default
      if 0 {
        switch_12_0:
        return (op_bracketedPrimary 0)
        switch_12_default:
        {}
        return (op_bracketedPrimary (op_minus 1073741823))
      }
      else {
      }
    }
  }
}
t_int FloppyCreateClose(/* TODO: param list ... */) {
  t_int Irp__IoStatus__Status
  t_int Irp__IoStatus__Information
  {
    {
      (op_assign myStatus 0)
      (op_assign Irp__IoStatus__Status 0)
      (op_assign Irp__IoStatus__Information 1)
      IofCompleteRequest((Irp,0))
    }
    return (op_bracketedPrimary 0)
  }
}
t_int FloppyQueueRequest
t_int FloppyDeviceControl(/* TODO: param list ... */) {
  t_int disketteExtension__HoldNewRequests = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__IsRemoved = __VERIFIER_nondet_int((exp null))
  t_int Irp__IoStatus__Information
  t_int disketteExtension__IsStarted = __VERIFIER_nondet_int((exp null))
  t_int Irp__CurrentLocation = __VERIFIER_nondet_int((exp null))
  t_int Irp__Tail__Overlay__CurrentStackLocation = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__TargetObject = __VERIFIER_nondet_int((exp null))
  t_int irpSp__Parameters__DeviceIoControl__OutputBufferLength = __VERIFIER_nondet_int((exp null))
  t_int sizeof__MOUNTDEV_NAME = __VERIFIER_nondet_int((exp null))
  t_int Irp__AssociatedIrp__SystemBuffer = __VERIFIER_nondet_int((exp null))
  t_int mountName__NameLength
  t_int disketteExtension__DeviceName__Length = __VERIFIER_nondet_int((exp null))
  t_int sizeof__USHORT = __VERIFIER_nondet_int((exp null))
  t_int disketteExtension__InterfaceString__Buffer = __VERIFIER_nondet_int((exp null))
  t_int uniqueId__UniqueIdLength
  t_int disketteExtension__InterfaceString__Length = __VERIFIER_nondet_int((exp null))
  t_int sizeof__MOUNTDEV_UNIQUE_ID = __VERIFIER_nondet_int((exp null))
  t_int irpSp__Parameters__DeviceIoControl__InputBufferLength = __VERIFIER_nondet_int((exp null))
  t_int sizeof__FORMAT_PARAMETERS = __VERIFIER_nondet_int((exp null))
  t_int irpSp__Parameters__DeviceIoControl__IoControlCode___1 = __VERIFIER_nondet_int((exp null))
  t_int sizeof__FORMAT_EX_PARAMETERS = __VERIFIER_nondet_int((exp null))
  t_int formatExParameters__FormatGapLength = __VERIFIER_nondet_int((exp null))
  t_int formatExParameters__SectorsPerTrack = __VERIFIER_nondet_int((exp null))
  t_int sizeof__DISK_GEOMETRY = __VERIFIER_nondet_int((exp null))
  t_int Irp__IoStatus__Status___0
  t_int disketteExtension = __VERIFIER_nondet_int((exp null))
  t_int ntStatus
  t_int outputBufferLength
  t_int lowestDriveMediaType = __VERIFIER_nondet_int((exp null))
  t_int highestDriveMediaType = __VERIFIER_nondet_int((exp null))
  t_int formatExParametersSize = __VERIFIER_nondet_int((exp null))
  t_int formatExParameters
  t_int tmp
  t_int mountName
  t_int uniqueId
  t_int tmp___0
  t_int __cil_tmp39
  t_int __cil_tmp40
  t_int __cil_tmp41 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp42
  t_int __cil_tmp43
  t_int __cil_tmp44 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp45 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp46
  t_int __cil_tmp47
  t_int __cil_tmp48
  t_int __cil_tmp49
  t_int __cil_tmp50 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp51
  t_int __cil_tmp52
  t_int __cil_tmp53
  t_int __cil_tmp54
  t_int __cil_tmp55 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp56
  t_int __cil_tmp57
  t_int __cil_tmp58
  t_int __cil_tmp59
  t_int __cil_tmp60 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp61
  t_int __cil_tmp62
  t_int __cil_tmp63
  t_int __cil_tmp64
  t_int __cil_tmp65 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp66 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp67
  t_int __cil_tmp68
  t_int __cil_tmp69 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp70
  t_int __cil_tmp71
  t_int __cil_tmp72 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp73
  t_int __cil_tmp74
  t_int __cil_tmp75 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp76
  t_int __cil_tmp77
  t_int __cil_tmp78 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp79
  t_int __cil_tmp80
  t_int __cil_tmp81 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp82
  t_int __cil_tmp83
  t_int __cil_tmp84
  t_int __cil_tmp85
  t_int __cil_tmp86
  t_int __cil_tmp87
  t_int __cil_tmp88 = __VERIFIER_nondet_int((exp null))
  t_int __cil_tmp89
  t_int __cil_tmp90
  t_unspecified __cil_tmp91
  {
    if disketteExtension__HoldNewRequests {
      {
        if (op_notequals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp41) {
          {
            (op_assign ntStatus FloppyQueueRequest((disketteExtension,Irp)))
          }
          return (op_bracketedPrimary ntStatus)
        }
        else {}
      }
    }
    else {}
    if disketteExtension__IsRemoved {
      {
        (op_assign Irp__IoStatus__Information 0)
        (op_assign Irp__IoStatus__Status___0 (op_minus 1073741738))
        (op_assign myStatus (op_minus 1073741738))
        IofCompleteRequest((Irp,0))
      }
      return (op_bracketedPrimary (op_minus 1073741738))
    }
    else {}
    if (op_not disketteExtension__IsStarted) {
      if (op_equals s NP) {
        (op_assign s SKIP1)
      }
      else {
        {
          errorFn((exp null))
        }
      }
      {
        (op_postFixIncr Irp__CurrentLocation)
        (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
        (op_assign tmp IofCallDriver((disketteExtension__TargetObject,Irp)))
      }
      return (op_bracketedPrimary tmp)
    }
    else {}
    {
      if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp44) {
        goto switch_13_exp_0
      }
      else {
        {
          if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp45) {
            goto switch_13_exp_1
          }
          else {
            {
              if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp50) {
                goto switch_13_exp_2
              }
              else {
                {
                  if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp55) {
                    goto switch_13_exp_3
                  }
                  else {
                    {
                      if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp60) {
                        goto switch_13_exp_4
                      }
                      else {
                        {
                          if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp65) {
                            goto switch_13_exp_5
                          }
                          else {
                            {
                              if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp66) {
                                goto switch_13_exp_6
                              }
                              else {
                                {
                                  if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp69) {
                                    goto switch_13_exp_7
                                  }
                                  else {
                                    {
                                      if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp72) {
                                        goto switch_13_exp_8
                                      }
                                      else {
                                        {
                                          if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp75) {
                                            goto switch_13_exp_9
                                          }
                                          else {
                                            {
                                              if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp78) {
                                                goto switch_13_exp_10
                                              }
                                              else {
                                                {
                                                  if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp81) {
                                                    goto switch_13_exp_11
                                                  }
                                                  else {
                                                    goto switch_13_default
                                                    if 0 {
                                                      switch_13_exp_0:
                                                      {}
                                                      if (op_lessThan irpSp__Parameters__DeviceIoControl__OutputBufferLength sizeof__MOUNTDEV_NAME) {
                                                        (op_assign ntStatus (op_minus 1073741811))
                                                        goto switch_13_break
                                                      }
                                                      else {}
                                                      (op_assign mountName Irp__AssociatedIrp__SystemBuffer)
                                                      (op_assign mountName__NameLength disketteExtension__DeviceName__Length)
                                                      {
                                                        (op_assign __cil_tmp82 (op_plus sizeof__USHORT mountName__NameLength))
                                                        if (op_lessThan irpSp__Parameters__DeviceIoControl__OutputBufferLength __cil_tmp82) {
                                                          (op_assign ntStatus (op_minus 2147483643))
                                                          (op_assign Irp__IoStatus__Information sizeof__MOUNTDEV_NAME)
                                                          goto switch_13_break
                                                        }
                                                        else {}
                                                      }
                                                      (op_assign ntStatus 0)
                                                      (op_assign Irp__IoStatus__Information (op_plus sizeof__USHORT mountName__NameLength))
                                                      goto switch_13_break
                                                      switch_13_exp_1:
                                                      {}
                                                      if (op_not disketteExtension__InterfaceString__Buffer) {
                                                        (op_assign ntStatus (op_minus 1073741811))
                                                        goto switch_13_break
                                                      }
                                                      else {
                                                        if (op_lessThan irpSp__Parameters__DeviceIoControl__OutputBufferLength sizeof__MOUNTDEV_UNIQUE_ID) {
                                                          (op_assign ntStatus (op_minus 1073741811))
                                                          goto switch_13_break
                                                        }
                                                        else {}
                                                      }
                                                      (op_assign uniqueId Irp__AssociatedIrp__SystemBuffer)
                                                      (op_assign uniqueId__UniqueIdLength disketteExtension__InterfaceString__Length)
                                                      {
                                                        (op_assign __cil_tmp83 (op_plus sizeof__USHORT uniqueId__UniqueIdLength))
                                                        if (op_lessThan irpSp__Parameters__DeviceIoControl__OutputBufferLength __cil_tmp83) {
                                                          (op_assign ntStatus (op_minus 2147483643))
                                                          (op_assign Irp__IoStatus__Information sizeof__MOUNTDEV_UNIQUE_ID)
                                                          goto switch_13_break
                                                        }
                                                        else {}
                                                      }
                                                      (op_assign ntStatus 0)
                                                      (op_assign Irp__IoStatus__Information (op_plus sizeof__USHORT uniqueId__UniqueIdLength))
                                                      goto switch_13_break
                                                      switch_13_exp_2:
                                                      {}
                                                      switch_13_exp_3:
                                                      {}
                                                      if (op_lessThan irpSp__Parameters__DeviceIoControl__InputBufferLength sizeof__FORMAT_PARAMETERS) {
                                                        (op_assign ntStatus (op_minus 1073741811))
                                                        goto switch_13_break
                                                      }
                                                      else {}
                                                      {
                                                        (op_assign tmp___0 FlCheckFormatParameters((disketteExtension,Irp__AssociatedIrp__SystemBuffer)))
                                                      }
                                                      if (op_not tmp___0) {
                                                        (op_assign ntStatus (op_minus 1073741811))
                                                        goto switch_13_break
                                                      }
                                                      else {}
                                                      {
                                                        if (op_equals irpSp__Parameters__DeviceIoControl__IoControlCode___1 __cil_tmp88) {
                                                          if (op_lessThan irpSp__Parameters__DeviceIoControl__InputBufferLength sizeof__FORMAT_EX_PARAMETERS) {
                                                            (op_assign ntStatus (op_minus 1073741811))
                                                            goto switch_13_break
                                                          }
                                                          else {}
                                                          (op_assign formatExParameters Irp__AssociatedIrp__SystemBuffer)
                                                          if (op_lessThan irpSp__Parameters__DeviceIoControl__InputBufferLength formatExParametersSize) {
                                                            (op_assign ntStatus (op_minus 1073741811))
                                                            goto switch_13_break
                                                          }
                                                          else {
                                                            if (op_greaterEqual formatExParameters__FormatGapLength 256) {
                                                              (op_assign ntStatus (op_minus 1073741811))
                                                              goto switch_13_break
                                                            }
                                                            else {
                                                              if (op_greaterEqual formatExParameters__SectorsPerTrack 256) {
                                                                (op_assign ntStatus (op_minus 1073741811))
                                                                goto switch_13_break
                                                              }
                                                              else {}
                                                            }
                                                          }
                                                        }
                                                        else {}
                                                      }
                                                      switch_13_exp_4:
                                                      {}
                                                      switch_13_exp_5:
                                                      {}
                                                      switch_13_exp_6:
                                                      {}
                                                      switch_13_exp_7:
                                                      {
                                                        (op_assign ntStatus FlQueueIrpToThread((Irp,disketteExtension)))
                                                      }
                                                      goto switch_13_break
                                                      switch_13_exp_8:
                                                      {}
                                                      switch_13_exp_9:
                                                      (op_assign outputBufferLength irpSp__Parameters__DeviceIoControl__OutputBufferLength)
                                                      if (op_lessThan outputBufferLength sizeof__DISK_GEOMETRY) {
                                                        (op_assign ntStatus (op_minus 1073741789))
                                                        goto switch_13_break
                                                      }
                                                      else {}
                                                      (op_assign ntStatus 0)
                                                      {
                                                        (op_assign __cil_tmp89 (op_minus highestDriveMediaType lowestDriveMediaType))
                                                        (op_assign __cil_tmp90 (op_plus __cil_tmp89 1))
                                                        if (op_lessThan outputBufferLength __cil_tmp90) {
                                                          (op_assign ntStatus (op_minus 2147483643))
                                                        }
                                                        else {}
                                                      }
                                                      goto switch_13_break
                                                      switch_13_exp_10:
                                                      {}
                                                      switch_13_exp_11:
                                                      {}
                                                      switch_13_default:
                                                      {}
                                                      if (op_equals s NP) {
                                                        (op_assign s SKIP1)
                                                      }
                                                      else {
                                                        {
                                                          errorFn((exp null))
                                                        }
                                                      }
                                                      {
                                                        (op_postFixIncr Irp__CurrentLocation)
                                                        (op_postFixIncr Irp__Tail__Overlay__CurrentStackLocation)
                                                        (op_assign ntStatus IofCallDriver((disketteExtension__TargetObject,Irp)))
                                                      }
                                                      return (op_bracketedPrimary ntStatus)
                                                    }
                                                    else {
                                                      switch_13_break:
                                                      {}
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    {
      (op_assign __cil_tmp91 (t_unspecified)ntStatus)
      if (op_notequals __cil_tmp91 259L) {
        {
          (op_assign Irp__IoStatus__Status___0 ntStatus)
          (op_assign myStatus ntStatus)
          IofCompleteRequest((Irp,0))
        }
      }
      else {}
    }
    return (op_bracketedPrimary ntStatus)
  }
}
t_int FlCheckFormatParameters(/* TODO: param list ... */) {
  t_int DriveMediaConstants__driveMediaType__MediaType = __VERIFIER_nondet_int((exp null))
  t_int FormatParameters__MediaType = __VERIFIER_nondet_int((exp null))
  t_int FAKE_CONDITION = __VERIFIER_nondet_int((exp null))
  {
    if (op_notequals DriveMediaConstants__driveMediaType__MediaType FormatParameters__MediaType) {
      return (op_bracketedPrimary 0)
    }
    else {
      if FAKE_CONDITION {
        return (op_bracketedPrimary 0)
      }
      else {
        return (op_bracketedPrimary 1)
      }
    }
  }
}
t_int FloppyQueueRequest(/* TODO: param list ... */) {
  t_int Irp__IoStatus__Status
  t_int Irp__IoStatus__Information
  t_int Irp__Tail__Overlay__CurrentStackLocation__Control
  t_int ntStatus
  t_int FAKE_CONDITION = __VERIFIER_nondet_int((exp null))
  {
    (op_postFixIncr PagingReferenceCount)
    if (op_equals PagingReferenceCount 1) {
    }
    else {}
    if FAKE_CONDITION {
      {
        (op_assign Irp__IoStatus__Status (op_minus 1073741536))
        (op_assign myStatus (op_minus 1073741536))
        (op_assign Irp__IoStatus__Information 0)
        IofCompleteRequest((Irp,0))
        (op_postFixDecr PagingReferenceCount)
      }
      if (op_equals PagingReferenceCount 0) {
      }
      else {}
      (op_assign ntStatus (op_minus 1073741536))
    }
    else {
      (op_assign Irp__IoStatus__Status 259)
      (op_assign myStatus 259)
      if (op_equals pended 0) {
        (op_assign pended 1)
      }
      else {
        {
          errorFn((exp null))
        }
      }
      (op_assign ntStatus 259)
    }
    return (op_bracketedPrimary ntStatus)
  }
}
t_void errorFn(/* TODO: param list ... */) {
  {
    ERROR:
    __VERIFIER_error((exp null))
    return (exp null)
  }
}
