// # recursive-simple/fibo_2calls_2_true-unreach-call_true-termination.c
// # custom traverser
  t_int __VERIFIER_nondet_int()
  t_void __VERIFIER_error()
  t_int fibo1(t_int n)
  t_int fibo2(t_int n)
  t_int fibo1(t_int n){
    if (op_lessThan n 1) {
      return 0
    }
    else if (op_equals n 1) {
      return 1
    }
    else {
      return (op_plus fibo2((op_minus n 1)) fibo2((op_minus n 2)))
    }
  }
  t_int fibo2(t_int n){
    if (op_lessThan n 1) {
      return 0
    }
    else if (op_equals n 1) {
      return 1
    }
    else {
      return (op_plus fibo1((op_minus n 1)) fibo1((op_minus n 2)))
    }
  }
  t_int main(t_void ){
    t_int x = 2
    t_int result = fibo1(x)
    if (op_notequals result 1) {
      ERROR:
      __VERIFIER_error()
    }
    else {}
    return 0
  }
// # default pretty printer
  extern int __VERIFIER_nondet_int();
  extern void __VERIFIER_error();
  int fibo1(int n);
  int fibo2(int n);
  int fibo1(int n)
  {
    if(n < 1){
      return 0;
    }else
    if(n == 1){
      return 1;
    }else{
      return fibo2(n - 1) + fibo2(n - 2);
    }
  }
  int fibo2(int n)
  {
    if(n < 1){
      return 0;
    }else
    if(n == 1){
      return 1;
    }else{
      return fibo1(n - 1) + fibo1(n - 2);
    }
  }
  int main(void)
  {
    int x = 2;
    int result = fibo1(x);
    if(result != 1){
      ERROR:
      __VERIFIER_error();
    }
    return 0;
  }
