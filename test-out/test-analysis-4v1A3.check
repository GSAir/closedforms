prog: {
  Assign(x,Const(0))
  Assign(a,New(A))
  Put(Ref(a),Const(field),Const(7))
  While(Less(Ref(x),Const(100)),{
    Put(Ref(a),Const(field),Const(7))
    Assign(x,Plus(Ref(x),Const(1)))
  })
  Assign(r,Ref(a))
}
val x0 = Map()
val x1 = Map("val" -> 0)
val x2 = Map("&x" -> x1)
val x3 = Map("top" -> Map())
val x4 = Map("&x" -> x1, "A" -> x3)
val x5 = Map("val" -> (A,top))
val x6 = Map("&x" -> x1, "A" -> x3, "&a" -> x5)
val x7 = Map("field" -> 7)
val x8 = Map("top" -> x7)
val x9 = Map("&x" -> x1, "A" -> x8, "&a" -> x5)
val x12 = ("top",x11)
starting spec loop with x9
val x13 = Map("val" -> 1)
val x14 = Map("&x" -> x13, "A" -> x8, "&a" -> x5)
lub(x9, x14) = ?
lub_x10(x9,x9,x14)
lub_x10_&x(x1,x1,x13)
lub_x10_&x_val(0,0,1)
0

1

1

confirmed iterative loop, d = 1
val x15 = x11 + -1
Set(("val",(x15,x11)))
val x16 = Map("val" -> x15)
val x17 = Map("val" -> x11)
lub_x10_A(x8,x8,x8)
lub_x10_&a(x5,x5,x5)
Set(("&x",(x16,x17)), ("A",(x8,x8)), ("&a",(x5,x5)))
val x18 = Map("&x" -> x16, "A" -> x8, "&a" -> x5)
val x19 = Map("&x" -> x17, "A" -> x8, "&a" -> x5)
lub(x9, x14) = x18
starting spec loop with x18
val x20 = x11 < 101
lub(x9, x19) = ?
lub_x10(x9,x18,x19)
lub_x10_&x(x1,x16,x17)
lub_x10_&x_val(0,x15,x11)
val x21 = x11 * -1
val x22 = x21 + 1
x11 + -1

x11

1

confirmed iterative loop, d = 1
Set(("val",(x15,x11)))
lub_x10_A(x8,x8,x8)
lub_x10_&a(x5,x5,x5)
Set(("&x",(x16,x17)), ("A",(x8,x8)), ("&a",(x5,x5)))
lub(x9, x19) = x18
val x10_&x_val = { x11 => x11 }
val x10 = { x11 => x19 }
fixindex: 100
val x23 = Map("val" -> 100)
val x24 = Map("&x" -> x23, "A" -> x8, "&a" -> x5)
*** after loop x24 ***
val x25 = Map("&x" -> x23, "A" -> x8, "&a" -> x5, "&r" -> x5)
res: ()
store: x25
transformed: x25
sched:
val x23 = Map("val" -> 100)
val x7 = Map("field" -> 7)
val x8 = Map("top" -> x7)
val x5 = Map("val" -> (A,top))
val x25 = Map("&x" -> x23, "A" -> x8, "&a" -> x5, "&r" -> x5)
term:
Map("&x" -> Map("val" -> 100), "A" -> Map("top" -> Map("field" -> 7)), "&a" -> Map("val" -> (A,top)), "&r" -> Map("val" -> (A,top)))

----
